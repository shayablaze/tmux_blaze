# Put this file (.tmux.conf) in the current user’s home directory

# Attention: you should install "tmuxinator" too - for writing and
# managing different tmux configurations.

# In this file we can do everything from defining new key shortcuts
# to setting up a default environment with multiple windows, panes,
# and running programs. Let’s start by setting a couple basic options
# that will make working with tmux much easier.



# Creating a custom theme from scratch gets pretty time consuming
# to get dialed in. As such, best to just use a pre-made theme instead
# as a jumping-off point. An especially good collection can be found i
# on Jim Myhrberg’s tmux-themepack repo.

#source-file "${HOME}/.tmux-themepack/powerline/block/green.tmuxtheme"

# for Powerline Themes, download the fonts. from here:
# https://github.com/powerline/fonts


set-option -g message-fg white
set-option -g repeat-time 0

# Selecting pane by pressing ctrl + digit keystroke
# but moreover you should configure the terminal
# so that tmux can recognise control+digit keystrokes correctly
bind-key C-0 select-pane -t 0
bind-key C-1 select-pane -t 1
bind-key C-2 select-pane -t 2
bind-key C-3 select-pane -t 3
bind-key C-4 select-pane -t 4
bind-key C-5 select-pane -t 5


# Setting up clipboard:
#set-window-option -g mode-keys vi

bind-key Escape copy-mode
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'y' send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"\; display-message "highlighted selection copied to system clipboard"


# we’re using the -g switch, for “global,” which sets the option
# Setting the prefix from C-b to C-a for all tmux sessions we create:
set -g prefix C-a

# Freeing up Ctrl-b:
# unbind C-b

# Sending the Prefix to Other Applications
bind C-a send-prefix


# for reloading this configuration file, in tmux you should
# enter your prefix (Here it's C-a) and : , and then type
# source-file ~/.tmux.conf

# Changing the Default Delay
# tmux adds a very small delay when sending commands,
# and this delay can interfere with other programs such as the Vim text editor.
# We can set this delay so it’s much more responsive:
set -g escape-time 1


# tmux messages are displayed for 2.5 seconds
set -g display-time 2500

# saving to a file the commands typed
set -g history-file ~/.tmux_history


# new window and retain cwd
bind C-c new-window -c "#{pane_current_path}"

# Prompt to rename window right after it's created
set-hook -g after-new-window 'command-prompt -I "#{window_name}" "rename-window '%%'"'



# when we create more than one window in a session,
# we reference windows by their index so I would like it to start from 1 and not Zero.
# This way you can use PREFIX 1 to jump to the first window instead of PREFIX 0.
#set -g base-index 1
set-option -g base-index 1

# The same logic I apply on panes using the pane-base-index option
# (So we have some consistency between our pane and window numbering).
set-window-option -g pane-base-index 1


# splitting panes
bind "|" split-window -h
bind "-" split-window -v

# Creating a Shortcut to Reload the Configuration
# we’ll set PREFIX r so it reloads our main .tmux.conf file in the current session.
unbind "r"
bind "r" source-file ~/.tmux.conf \; display "Reloaded configuration!"
# edit .tmux.conf on the fly
bind "e" split-window -h "vim ~/.tmux.conf"
bind "k" display "Killing all sessions and windows" \; kill-server


# importnant instruction: for setting the names of the windows:
set-option -g allow-rename off

bind "g" display "Gil You have pressed"


# Handling the mouse
#setw -g mode-mouse on
set -g mouse on

# for Colour enter:
# wget http://www.vim.org/scripts/download_script.php?src_id=4568 -O colortest
# perl colortest -w

# Set the default terminal mode to 256color mode
set -g default-terminal "xterm-256color"

# increase scrollback buffer size
set -g history-limit 50000

# set the status line's colors
set -g status-fg black
set -g status-bg black
set -g message-attr bright

# set the color of the window list
setw -g window-status-fg cyan
setw -g window-status-bg default
setw -g window-status-attr dim


# pane colors
set -g pane-border-fg green
set -g pane-border-bg black
set -g pane-active-border-fg black
set -g pane-active-border-bg yellow


# Show pane status on the border
set-option -g pane-border-status top
set-option -g pane-border-format " #P: #{pane_current_command} "

# Center the window list
set -g status-justify centre

# set colors for the active window
setw -g window-status-current-fg black
setw -g window-status-current-bg colour120
setw -g window-status-current-attr bright

# pane colors
set -g pane-border-fg green
set -g pane-border-bg black
set -g pane-active-border-fg black
set -g pane-active-border-bg yellow


# List of plugins The plugin are cloned to ~/.tmux/plugins/ dir and sourced
# for fetching and installing the new plugin press prefix + I (Capital i as Install)
# more info can be found here: https://github.com/tmux-plugins/tpm
# moreover you can manage plugins from cmd line:
# https://github.com/tmux-plugins/tpm/blob/master/docs/managing_plugins_via_cmd_line.md

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'samoshkin/tmux-plugin-sysstat'

# saves all the little details from your tmux environment
# so it can be completely restored after a system restart
set -g @plugin 'tmux-plugins/tmux-resurrect'


set -g status-right "#{sysstat_cpu} | #{sysstat_mem} | #{sysstat_swap} | #{sysstat_loadavg} | #[fg=cyan]#(echo $USER)#[default]@#H"
#set -g status-right "Online: #{online_status}"
set -g @plugin 'samoshkin/tmux-plugin-sysstat'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
# tpm is Tmux Plugin Manager
run '~/.tmux/plugins/tpm/tpm'
